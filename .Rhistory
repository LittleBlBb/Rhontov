install.packages("readxl")
library(readxl)
# Укажите путь к файлу
file_path <- "C:\Users\Kurdicks\Desktop\r debilniyi yazik\Excel\Beer.xlsx"
library(readxl)
# Укажите путь к файлу
file_path <- "C:/Users/Kurdicks/Desktop/r debilniyi yazik/Excel/Beer.xlsx"
# Чтение листа по имени
data <- read_excel(file_path, sheet = "Sheet1")
library(readxl)
# Укажите путь к файлу
file_path <- "C:/Users/Kurdicks/Desktop/r debilniyi yazik/Excel/Beer.xlsx"
# Чтение листа по имени
data <- read_excel(file_path, sheet = "Sheet1")
# Или чтение листа по индексу
data <- read_excel(file_path, sheet = 1)
# Просмотр данных
print(data)
View(data)
min_values <- apply(data[, -ncol(data)], 2, max)
max_values <- apply(data[, -ncol(data)], 2, min)
mean_values <- apply(data[, -ncol(data)], 2, mean)
# Вывод результатов
print("Max values:")
print(max_values)
print("Min values:")
print(min_values)
print("Mean values:")
print(mean_values)
min_values <- apply(data[, -ncol(data)], 2, min)
max_values <- apply(data[, -ncol(data)], 2, max)
mean_values <- apply(data[, -ncol(data)], 2, mean)
# Вывод результатов
print("Max values:")
print(max_values)
print("Min values:")
print(min_values)
print("Mean values:")
print(mean_values)
min_values <- apply(data[, c(-1,-ncol(data))], 2, min)
max_values <- apply(data[, c(-1,-ncol(data))], 2, max)
mean_values <- apply(data[, c(-1,-ncol(data))], 2, mean)
# Вывод результатов
print("Max values:")
print(max_values)
print("Min values:")
print(min_values)
print("Mean values:")
print(mean_values)
# Подсчет количества людей с оценками >0.7
count_high <- apply(data_ratings, 2, function(x) sum(x > 7))
data_ratings = data[, c(-1,-ncol(data))]
# Подсчет количества людей с оценками >0.7
count_high <- apply(data_ratings, 2, function(x) sum(x > 7))
# Подсчет количества людей с оценками <0.3
count_low <- apply(data_ratings, 2, function(x) sum(x < 3))
# Вывод результатов
print("Count of people with ratings > 7:")
print(count_high)
print("Count of people with ratings < 3:")
print(count_low)
# Вычисление среднего рейтинга для каждого фильма
mean_ratings <- colMeans(data_ratings)
# Сортировка по убыванию
sorted_ratings <- sort(mean_ratings, decreasing = TRUE)
# Вывод рейтинга
print("Movie ratings in descending order:")
print(sorted_ratings)
barplot(mean_ratings, main = "Average Movie Ratings", xlab = "Movies", ylab = "Average Rating", col = "blue")
library(readxl)
file_path <- "C:/Users/Kurdicks/Desktop/r debilniyi yazik/Excel/Beer.xlsx"
data <- read_excel(file_path, sheet = 1)
data_ratings = data[, c(-1,-ncol(data))]
library(readxl)
file_path <- "C:/Users/Kurdicks/Desktop/r debilniyi yazik/Excel/Beer.xlsx"
data <- read_excel(file_path, sheet = 1)
data_ratings = data[, c(-1,-ncol(data))]
View(data_ratings)
View(data)
summary(data_ratings)
mean_values <- colMeans(data_ratings)
median_values <- apply(data_ratings, 2, median)
sd_values <- apply(data_ratings, 2, sd)
# Вывод результатов
print("Mean values:")
print(mean_values)
print("Median values:")
print(median_values)
print("Standard deviation values:")
print(sd_values)
# Сортировка данных по столбцу "Kozel" (пример)
sorted_data <- data_csv[order(data_csv$Kozel, decreasing = TRUE), ]
# Сортировка данных по столбцу "Kozel" (пример)
sorted_data <- data_ratings[order(data_csv$Kozel, decreasing = TRUE), ]
# Сортировка данных по столбцу "Kozel" (пример)
sorted_data <- data_ratings[order(data_ratings$Kozel, decreasing = TRUE), ]
# Просмотр отсортированных данных
head(sorted_data)
View(sorted_data)
View(sorted_data)
# Сортировка данных по столбцу "Kozel" (пример)
sorted_data <- data[order(data$ФИО, decreasing = TRUE), ]
# Просмотр отсортированных данных
head(sorted_data)
View(sorted_data)
# Создание поднабора данных для Kozel > 7
subdataset <- data_ratings[data_ratings$Kozel > 7, ]
# Просмотр поднабора данных
print(subdataset)
# Размерность поднабора данных
dimensions <- dim(subdataset)
print("Dimensions of subdataset:")
print(dimensions)
# Создание поднабора данных для Kozel > 7
subdataset <- data[data$ФИО = "Андрей Казах", ]
# Создание поднабора данных для Kozel > 7
subdataset <- data[data$ФИО == "Андрей Казах", ]
# Просмотр поднабора данных
print(subdataset)
# Размерность поднабора данных
dimensions <- dim(subdataset)
print("Dimensions of subdataset:")
print(dimensions)
View(subdataset)
# Создание поднабора данных для Kozel > 7
subdataset <- data_ratings[data_ratings$Kozel > 7, ]
# Просмотр поднабора данных
print(subdataset)
# Размерность поднабора данных
dimensions <- dim(subdataset)
print("Dimensions of subdataset:")
print(dimensions)
# Гистограмма для Kozel в поднаборе данных
hist(subdataset$Kozel, main = "Histogram of Kozel Ratings (> 7)", xlab = "Rating", col = "lightblue")
# Боксплот для Movie1 в поднаборе данных
boxplot(subdataset$Kozel, main = "Boxplot of Kozel Ratings (> 7)", ylab = "Rating", col = "lightgreen")
# Описательные статистики для поднабора данных
summary(subdataset)
Time <- rep(0, 10)
Time <- numerix(10)
Time <- numerix(10)
Time <- numeric(10)
Time <- numeric(10)
Time1 <- rep(0, 10)
Time.getclass()
Time.getClass()
getClass(Time1)
Time.class()
class(Time)
class(Time1)
t0 <- Sys.time()
t1 <- Sys.time()
Time[1] <- t1-t0
RES <- numeric(10)
NUMB <- 1:10
arr1 <- list(rep(c(TRUE, FALSE), 5))
arr1 <- rep(list(rep(c(TRUE, FALSE), 5)), 3)
arr1 <- list(rep(rep(c(TRUE, FALSE), 5)), 3)
View(arr1)
arr1 <- list(rep(c(TRUE, FALSE), 5), (rep(c(TRUE, FALSE), 5), (rep(c(TRUE, FALSE), 5))
arr1 <- list(rep(c(TRUE, FALSE), 5), rep(c(TRUE, FALSE), 5), rep(c(TRUE, FALSE), 5))
View(arr1)
RES7 <- Reduce('|', arr1)
RES7 <- Reduce('|', unlist(arr1))
time <- numeric(0,10)
time <- numeric(0,10)
time <- numeric(10)
num <- (1:10)
res <- double(10)
t0 <- strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time <- numeric(10)
num <- (1:10)
res <- double(10)
t0 <- strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time[1] <- t0
time[1] <- strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time <- numeric(10)
num <- (1:10)
res <- double(10)
time[1] <- strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
xA <- seq(100, 200, by=5)
res[1] = sum(xA)
t0 <- strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time[1] = t1 - t0
t1 <- strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time[1] = t1 - t0
col <- length(xA)
res[2] <- col
res[3] <- mean(xA)
t2 <- strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time[2] <- t2-t1
norm_rasp <- rnorm(col+7, mean = 5)
sr_kv = sd(norm_rasp)
res[4] <- sr_kv
t3 <- strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time[3] <- t3 - t2
#4
arr <- array(xA, c(5, col/5))
sum_sin <- sum(sin(arr))
sinArr <- sin(arr)
sumSinArr <- sum(sinArr)
rm(sum_sin)
res[5] <- round(sumSinArr, 4)
res[4] <- round(sr_kv)
#5
matr <- matrix(xA, nrow = 5)
View(matr)
matr <- matr(-c(2,5))
View(matr)
matr = matr(-c(2,5))
matr = matr[-c(2,5)]
#5
matr <- matrix(xA, nrow = 5)
View(matr)
matr = matr[-c(2,5), ]
nrow(matr)
res[6] <-nrow(matr) + ncol(matr)
t4 = strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time[4] <- t4-t3
t5 = strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time[5] <- t5-t4
#6
l_ist <- rep(c(TRUE, FALSE), 5)
#6
l_ist <- list(rep(c(TRUE, FALSE), 5), rep(c(TRUE, FALSE), 5), rep(c(TRUE, FALSE), 5))
res[7] <- Reduce('|', unlist(l_ist))
t6 = strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time[6] = t6-t5
#7
identical(arr, matr)
#7
res[8] <- identical(arr, matr)
t7 = strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time[7] = t7-t6
View(time)
#8
arr <- array(matr)
identical(arr, matr)
identical(arr, matr)
#8
arr <- matr
identical(arr, matr)
res[9] <- identical(arr, matr)
t8 <-strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
time[8] <- t8-t7
t9 <- strptime(Sys.time(), "%Y-%m-%d %H:%M:%S")
data.frame(
NUM = num,
RES = res,
TIME = time
)
time[9] <- t9-t8
time[10] <- t9-t0
View(time)
#9
ans <- data.frame(
NUM = num,
RES = res,
TIME = time
)
View(ans)
install.packages("readxl")
library(readxl)
file_path <- "C:/Users/Kurdicks/Desktop/r debilniyi yazik/Excel/Beer.xlsx"
data <- read_excel(file_path, sheet = 1)
data_ratings = data[, c(-1,-ncol(data))]
min_values <- apply(data[, c(-1,-ncol(data))], 2, min)
max_values <- apply(data[, c(-1,-ncol(data))], 2, max)
mean_values <- apply(data[, c(-1,-ncol(data))], 2, mean)
# Вывод результатов
print("Max values:")
print(max_values)
print("Min values:")
print(min_values)
print("Mean values:")
print(mean_values)
# Подсчет количества людей с оценками > 7
count_high <- apply(data_ratings, 2, function(x) sum(x > 7))
# Подсчет количества людей с оценками < 3
count_low <- apply(data_ratings, 2, function(x) sum(x < 3))
# Вывод результатов
print("Count of people with ratings > 7:")
print(count_high)
print("Count of people with ratings < 3:")
print(count_low)
# Вычисление среднего рейтинга
mean_ratings <- colMeans(data_ratings)
# Сортировка по убыванию
sorted_ratings <- sort(mean_ratings, decreasing = TRUE)
# Вывод рейтинга
print("Movie ratings in descending order:")
print(sorted_ratings)
# Построение столбчатой диаграммы
barplot(mean_ratings, main = "Average Movie Ratings", xlab = "Movies", ylab = "Average Rating", col = "blue")
print("Min values:")
install.packages("readxl")
library(readxl)
file_path <- "C:/Users/Kurdicks/Desktop/r debilniyi yazik/Excel/Beer.xlsx"
data <- read_excel(file_path, sheet = 1)
data_ratings = data[, c(-1,-ncol(data))]
min_values <- apply(data[, c(-1,-ncol(data))], 2, min)
max_values <- apply(data[, c(-1,-ncol(data))], 2, max)
mean_values <- apply(data[, c(-1,-ncol(data))], 2, mean)
print("Max values:")
print(max_values)
print("Min values:")
print(min_values)
print("Mean values:")
print(mean_values)
count_high <- apply(data_ratings, 2, function(x) sum(x > 7))
count_low <- apply(data_ratings, 2, function(x) sum(x < 3))
print("Count of people with ratings > 7:")
print(count_high)
print("Count of people with ratings < 3:")
print(count_low)
mean_ratings <- colMeans(data_ratings)
sorted_ratings <- sort(mean_ratings, decreasing = TRUE)
print("Movie ratings in descending order:")
print(sorted_ratings)
barplot(mean_ratings, main = "Average Movie Ratings", xlab = "Movies", ylab = "Average Rating", col = "blue")
install.packages("readxl")
View(data)
View(data_ratings)
count_high <- count(apply(data_ratings, 2, function(x) sum(x > 7)))
count_high <- ncol(apply(data_ratings, 2, function(x) sum(x > 7)))
count_high <- ncols(apply(data_ratings, 2, function(x) sum(x > 7)))
count_high <- ncol(apply(data_ratings, 2, function(x) sum(x > 7)))
count_high <- length(apply(data_ratings, 2, function(x) sum(x > 7)))
count_high <- apply(data_ratings, 2, function(x) sum(x > 7))
barplot(mean_ratings, main = "Average Movie Ratings", xlab = "Movies", ylab = "Average Rating", col = "blue")
head(sorted_data)
library(readxl)
file_path <- "C:/Users/Kurdicks/Desktop/r debilniyi yazik/Excel/Beer.xlsx"
data <- read_excel(file_path, sheet = 1)
data_ratings = data[, c(-1,-ncol(data))]
summary(data_ratings)
mean_values <- colMeans(data_ratings)
median_values <- apply(data_ratings, 2, median)
sd_values <- apply(data_ratings, 2, sd)
print("Mean values:")
print(mean_values)
print("Median values:")
print(median_values)
print("Standard deviation values:")
print(sd_values)
# Сортировка данных по столбцу "ФИО" (пример)
sorted_data <- data[order(data$ФИО, decreasing = TRUE), ]
head(sorted_data)
subdataset <- data_ratings[data_ratings$Kozel > 7, ]
print(subdataset)
dimensions <- dim(subdataset)
print("Dimensions of subdataset:")
print(dimensions)
# Гистограмма для Kozel в поднаборе данных
hist(subdataset$Kozel, main = "Histogram of Kozel Ratings (> 7)", xlab = "Rating", col = "lightblue")
# Боксплот для Kozel в поднаборе данных
boxplot(subdataset$Kozel, main = "Boxplot of Kozel Ratings (> 7)", ylab = "Rating", col = "lightgreen")
# Описательные статистики для поднабора данных
summary(subdataset)
head(sorted_data)
View(subdataset)
library(readxl)
file_path <- "C:/Users/Kurdicks/Desktop/r debilniyi yazik/Excel/Beer.xlsx"
data <- read_excel(file_path, sheet = 1)
data_ratings = data[, c(-1,-ncol(data))]
min_values <- apply(data[, c(-1,-ncol(data))], 2, min)
max_values <- apply(data[, c(-1,-ncol(data))], 2, max)
mean_values <- apply(data[, c(-1,-ncol(data))], 2, mean)
print("Max values:")
print(max_values)
print("Min values:")
print(min_values)
print("Mean values:")
print(mean_values)
count_high <- apply(data_ratings, 2, function(x) sum(x > 7))
count_low <- apply(data_ratings, 2, function(x) sum(x < 3))
print("Count of people with ratings > 7:")
print(count_high)
print("Count of people with ratings < 3:")
print(count_low)
mean_ratings <- colMeans(data_ratings)
sorted_ratings <- sort(mean_ratings, decreasing = TRUE)
print("Movie ratings in descending order:")
print(sorted_ratings)
barplot(mean_ratings, main = "Average Movie Ratings", xlab = "Movies", ylab = "Average Rating", col = "blue")
View(data)
View(data_ratings)
#install.packages("readxl")
library(readxl)
file_path <- "C:/Users/Kurdicks/Desktop/r debilniyi yazik/Excel/Beer.xlsx"
data <- read_excel(file_path, sheet = 1)
data_ratings = data[, c(-1,-ncol(data))]
min_values <- apply(data_ratings, 2, min)
max_values <- apply(data_ratings, 2, max)
mean_values <- apply(data_ratings, 2, mean)
print("Max values:")
print(max_values)
print("Min values:")
print(min_values)
print("Mean values:")
print(mean_values)
count_high <- apply(data_ratings, 2, function(x) sum(x > 7))
count_low <- apply(data_ratings, 2, function(x) sum(x < 3))
print("Count of people with ratings > 7:")
print(count_high)
print("Count of people with ratings < 3:")
print(count_low)
mean_ratings <- colMeans(data_ratings)
sorted_ratings <- sort(mean_ratings, decreasing = TRUE)
print("Movie ratings in descending order:")
print(sorted_ratings)
barplot(mean_ratings, main = "Average Movie Ratings", xlab = "Movies", ylab = "Average Rating", col = "blue")
min_values <- apply(data_ratings, 2, min)
min_values
max_values
mean_values
mean_values <- round(apply(data_ratings, 2, mean), 2)
mean_values
count_high
count_low
mean_ratings
sorted_ratings <- sort(mean_values, decreasing = TRUE)
sorted_ratings
barplot(sorted_ratings, main = "Average Movie Ratings", xlab = "Movies", ylab = "Average Rating", col = "blue")
barplot(sorted_ratings, main = "Average Beer Ratings", xlab = "Beers", ylab = "Average Rating", col = "blue")
abline(h = overall_mean, col = "red", lwd = 2)
overall_mean <- round(mean(unlist(data_ratings)), 2)
print(overall_mean)
barplot(sorted_ratings, main = "Average Beer Ratings", xlab = "Beers", ylab = "Average Rating", col = "blue")
abline(h = overall_mean, col = "red", lwd = 2)
count_high <- colSums(data_ratings > 7)
count_low <- colSums(data_ratings < 3)
abline(h = overall_mean, col = "red", lwd = 3)
sub_set <- data_numeric[data_numeric[, selected_beer], ]
data <- read.csv("C:/Users/Kurdicks/Downloads/Пивчик - Ответы на форму (1).csv", header=TRUE, stringsAsFactors=FALSE)
data_numeric <- data[, -c(1,ncol(data))]
empty_rows <- which(data$"ФИО" %in% c("", " ", NA))
empty_rows2 <- which(data$"ФИО" == "" | data$"ФИО" == " ")
data_without_empty_FIO <- data[-empty_rows, ]
data_numeric[] <- lapply(data_numeric, as.numeric)
max_values <- apply(data_numeric, 2, max, na.rm=TRUE)
min_values <- apply(data_numeric, 2, min, na.rm=TRUE)
mean_values <- apply(data_numeric, 2, mean, na.rm=TRUE)
selected_beer <- "Corona.extra"
sub_set <- data_numeric[data_numeric[, selected_beer], ]
subdataset <- data_numeric[data_numeric[, selected_beer] > 7, ]
print("NewNewNewNew")
print(subdataset)
dim(subdataset)
hist(sub_set$"Corona.extra", main="Гистограмма оценок Corona", col="blue", breaks=5, ylab = "Частота", xlab = "Оценки")
boxplot(subdataset,
main="Boxplot оценок",
col="orange",
las=2,
xlab = "пиво",
ylab = "оценка",
cex.axis = 0.7)
mean_values_sub <- apply(subdataset, 2, mean, na.rm=TRUE)
median_values_sub <- apply(subdataset, 2, median, na.rm=TRUE)
sd_values_sub <- apply(subdataset, 2, sd, na.rm=TRUE)
result_sub <- data.frame(Среднее=mean_values_sub, Медиана=median_values_sub, Отклонение=sd_values_sub,Минимум=min_values,Максимум=max_values)
print(result_sub)
View(data_without_empty_FIO)
